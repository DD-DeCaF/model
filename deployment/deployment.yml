apiVersion: apps/v1
kind: Deployment
metadata:
  name: model-production
spec:
  selector:
    matchLabels:
      app: model
      env: production
  replicas: 1
  template:
    metadata:
      labels:
        app: model
        env: production
    spec:
      containers:
      - name: web
        image: gcr.io/dd-decaf-cfbf6/model:master
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
        env:
        - name: ENVIRONMENT
          value: production
        - name: REDIS_ADDR
          value: localhost
        - name: REDIS_PORT
          value: "6379"
        - name: ANNOTATIONS_API
          value: http://gene-to-reactions-production/annotation/genes
        - name: ID_MAPPER_API
          value: http://id-mapper-production/idmapping/query
        - name: prometheus_multiproc_dir
          value: /prometheus-client
        - name: SENTRY_DSN
          valueFrom:
            secretKeyRef:
              name: model-production
              key: SENTRY_DSN
        volumeMounts:
        - mountPath: /prometheus-client
          name: prometheus-client
        command: ["gunicorn", "-w", "4", "-b", "0.0.0.0:8000", "--preload", "-t", "30", "-k", "aiohttp.worker.GunicornWebWorker", "model.app:get_app()"]
        resources:
          requests:
            cpu: "750m"
            memory: "512Mi"
          limits:
            cpu: "1800m"
      - name: redis
        image: redis:latest
        ports:
        - containerPort: 6379
        resources:
          requests:
            cpu: "10m"
            memory: "512Mi"
          limits:
            cpu: "100m"
      volumes:
      - name: prometheus-client
        emptyDir: {}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: model-staging
spec:
  selector:
    matchLabels:
      app: model
      env: staging
  replicas: 1
  template:
    metadata:
      labels:
        app: model
        env: staging
    spec:
      containers:
      - name: web
        image: gcr.io/dd-decaf-cfbf6/model:devel
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
        env:
        - name: ENVIRONMENT
          value: staging
        - name: REDIS_ADDR
          value: localhost
        - name: REDIS_PORT
          value: "6379"
        - name: ANNOTATIONS_API
          value: http://gene-to-reactions-staging/annotation/genes
        - name: ID_MAPPER_API
          value: http://id-mapper-production/idmapping/query
        - name: prometheus_multiproc_dir
          value: /prometheus-client
        - name: SENTRY_DSN
          valueFrom:
            secretKeyRef:
              name: model-staging
              key: SENTRY_DSN
        volumeMounts:
        - mountPath: /prometheus-client
          name: prometheus-client
        command: ["gunicorn", "-w", "4", "-b", "0.0.0.0:8000", "--preload", "-t", "30", "-k", "aiohttp.worker.GunicornWebWorker", "model.app:get_app()"]
        resources:
          requests:
            cpu: "100m"
          limits:
            cpu: "500m"
      - name: redis
        image: redis:latest
        ports:
        - containerPort: 6379
        resources:
          requests:
            cpu: "10m"
          limits:
            cpu: "100m"
      volumes:
      - name: prometheus-client
        emptyDir: {}
